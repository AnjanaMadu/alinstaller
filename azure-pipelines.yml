trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

schedules:
- cron: "0 0 * * *"
  displayName: Daily build
  branches:
    include:
    - master
  always: true

jobs:
- job: Build
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: |
      # Set the relevant environment variables
      case $BUILD_SOURCEBRANCH in
        refs/tags/*)
          TAG=`echo $BUILD_SOURCEBRANCH | sed 's/refs\/tags\///'`
          OUTPUT_FILE=alinstaller-`date -u +%Y.%m.%d`-$TAG-x86_64.iso
          echo "##vso[task.setvariable variable=alinstallerTag]$TAG"
          echo "##vso[task.setvariable variable=alinstallerOutputFile]$OUTPUT_FILE"
          ;;
        *)
          OUTPUT_FILE=alinstaller-`date -u +%Y.%m.%d`-debug-x86_64.iso
          echo "##vso[task.setvariable variable=alinstallerOutputFile]$OUTPUT_FILE"
          ;;
      esac

      while ! curl -L -o /dev/null https://dev.azure.com/alinstaller/alinstaller/_build; do true; done

      docker pull archlinux/base
      docker run -d -i -t --privileged -v `pwd`:/root/repo --name build archlinux/base
      docker exec -t build pacman -Syy --noconfirm
      docker exec -t build pacman -Su --noconfirm
      docker exec -t build pacman -S --needed --noconfirm base base-devel archiso gtk3 python-babel python-gobject python-psutil python-pylint python-pythondialog python-setuptools
      docker exec -t build sed -i 's/\(mksquashfs .*\)-comp/\1-b 1024K -comp/' /bin/mkarchiso # reduce image size

      docker exec -t build bash -c "cd /root/repo && ./check.sh && ./build.sh"

      sudo mv build/out/alinstaller.iso $BUILD_ARTIFACTSTAGINGDIRECTORY/$OUTPUT_FILE && sudo chown $USER:$USER $BUILD_ARTIFACTSTAGINGDIRECTORY/$OUTPUT_FILE

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/$(alinstallerOutputFile)
      artifactName: $(alinstallerOutputFile)

  - task: GitHubRelease@0
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: github
      action: edit
      tag: $(alinstallerTag)
      assets: $(Build.ArtifactStagingDirectory)/$(alinstallerOutputFile)
      isPreRelease: true
      addChangeLog: false
